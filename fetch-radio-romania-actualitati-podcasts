#!/bin/bash

# Copyright (C) 2017-2020 Andrei Pavel, andrei.pavel@mail.com
# Licensed under the MIT License

# Header
SCRIPT_PATH="$(dirname "$(readlink -f "${0}")")"
. "${SCRIPT_PATH}/lib/header"
. "${SCRIPT_PATH}/lib/spinner"

argument 'simple' 'audio' '-a|--audio' "download audio files instead of creating HTML redirects to romania-actualitati.ro's storage"

parse-parameters "${@}"

# Default values
test -z "${audio+x}" && audio=false

#------------------------------------------------------------------------------#

function archive() {
  local auxiliary="${1}"
  local directory="${2}"
  local filename="${3}"
  local month="${4}"
  local year="${5}"
  local month_directory="${directory}/${year}/${month}"
  mkdir -p "${month_directory}"
  cp -p "${auxiliary}" "${month_directory}/${filename}"
  cp -p "${auxiliary}" "${directory}/${filename}"
}

function download() {
  local target="${1}"
  local url="${2}"
  if ! wget -O "${target}" "${url}" &> /dev/null; then
    printf 'Could not download audio file %s' "${url}" >&2
  fi
}

function redirect-html() {
  local target="${1}"
  local url="${2}"
  printf "\
<html><head><meta http-equiv=\"refresh\" content=\"0;url=%s\" /><title>Redirecting...</title></head><body>Redirecting.... Click <a href=\"%s\">here</a> to hurry things up.</body></html>
" "${url}" "${url}" > "${target}"
}

function cleanup() {
  local directory="${1}"
  while true; do
    file=$(find "${directory}" -maxdepth 1 -type f -printf '%T@\t%p\n' | sort -t $'\t' -g | head -n -10 | cut -d $'\t' -f 2- | tail -n 1)
    if test -n "${file}"; then
      rm "${file}"
    else
      break
    fi
  done
}

function literal-months-to-numeric-months() {
  result=
  while test ${#} -gt 0; do
    m=$(printf '%s' "${1}" | tr '[:upper:]' '[:lower:]')
    if test "${m}" = 'ianuarie'; then
      result="${result} 01"
    elif test "${m}" = 'februarie'; then
      result="${result} 02"
    elif test "${m}" = 'martie'; then
      result="${result} 03"
    elif test "${m}" = 'aprilie'; then
      result="${result} 04"
    elif test "${m}" = 'mai'; then
      result="${result} 05"
    elif test "${m}" = 'iunie'; then
      result="${result} 06"
    elif test "${m}" = 'iulie'; then
      result="${result} 07"
    elif test "${m}" = 'august'; then
      result="${result} 08"
    elif test "${m}" = 'septembrie'; then
      result="${result} 09"
    elif test "${m}" = 'octombrie'; then
      result="${result} 10"
    elif test "${m}" = 'noiembrie'; then
      result="${result} 11"
    elif test "${m}" = 'decembrie'; then
      result="${result} 12"
    else
      result="${result} ${m}"
    fi
    shift
  done
  printf '%s' "${result}" | sed 's/^ *//g' | sed 's/ *$//g';
}

function fetch() {
  local podcast="${1}"
  local episode="${2}"
  local url="${3}"
  local directory="${4}"
  local auxiliary="/tmp/${podcast}.mp3"

  mkdir -p "${directory}"

  filename="${episode}"
  if ${audio}; then
    filename="${filename}.mp3"
  fi
  if test ! -f "${directory}/${filename}"; then
    if ${audio}; then
      download "${auxiliary}" "${url}"
    else
      redirect-html "${auxiliary}" "${url}"
    fi
    local date="$(printf '%s' "${episode}" | sed 's/ /-/g' | cut -d ' ' -f 3)"
    local day="$(printf '%s' "${date}" | cut -d '-' -f 3)"
    local month="$(printf '%s' "${date}" | cut -d '-' -f 4)"
    local year="$(printf '%s' "${date}" | cut -d '-' -f 5)"
    month=$(literal-months-to-numeric-months "${month}")
    touch -d "${year}-${month}-${day}" "${auxiliary}" || true
    archive "${auxiliary}" "${directory}" "${filename}" "${month}" "${year}"
  fi

  rm -f "${auxiliary}"
}

function main() {
  local link='https://podcast.srr.ro/'
  local radio_list=( $( curl -Ls "${link}" | pup 'div#top-menu-2 a attr{href}' ) )
  for i in ${radio_list}; do
    local podcast_list=$(curl -Ls "${link}${i}" | pup 'div#top-menu-3 a attr{href}')
    local podcast_title_list=$(curl -Ls "${link}${i}" | pup 'div#top-menu-3 a text{}')
    local jj=1
    for j in ${podcast_list}; do
      local podcast=$(printf '%s\n' "${podcast_title_list}" | head -n "${jj}" | tail -n 1 | xargs)
      podcast="${podcast,,}"
      podcast=$(printf '%s\n' "${podcast}" | sed 's/ /-/g')
      podcast=$(printf '%s\n' "${podcast}" | sed 's/&#34;-&#34;/minus/g')
      podcast=$(printf '%s\n' "${podcast}" | sed 's/&#34;+&#34;/plus/g')
      podcast=$(printf '%s\n' "${podcast}" | sed 's/---/-/g')
      start-spinner "${podcast}"
      local directory="/usr/share/rra-podcasts/${podcast}"
      local episode_htmls=$(curl -Ls "${link}${i}${j}" | pup 'div.card')
      local episode_titles=$(printf '%s\n' "${episode_htmls}" | pup 'div.card-body p.card-text text{}' | sed '/^ *$/d')
      local episode_links=$(printf '%s\n' "${episode_htmls}" | pup 'div.card-footer audio source attr{src}')
      k=1
      while true; do
        local episode=$(printf '%s\n\n' "${episode_titles}" | head -n "${k}" | tail -n 1 | xargs)
        local url=$(printf '%s\n\n' "${episode_links}" | head -n "${k}" | tail -n 1)
        if test -z "${episode}" && test -z "${url}"; then
          break
        fi
        url="${link}${url}"
        fetch "${podcast}" "${episode}" "${url}" "${directory}"
        k=$((k + 1))
      done
      jj=$((jj + 1))
      cleanup "${directory}"
      stop-spinner ${?}
    done
  done
}

main
